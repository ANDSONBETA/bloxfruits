-- UNIVERSAL SCRIPTS | Completo: visual fiel, funções restauradas Hub 1 e Hub 2, seleção de players preto/branco, LIGHT-ALL, etc.

local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local UIS = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local Lighting = game:GetService("Lighting")

local disconnects = {}
local currentWalkSpeed = 16
local currentJumpPower = 50
local lightAllActive = false

------------------ GUI PRINCIPAL ------------------

local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = "UniversalScriptsHub"
ScreenGui.Parent = game.CoreGui
ScreenGui.ResetOnSpawn = false
ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

local MainFrame = Instance.new("Frame")
MainFrame.Size = UDim2.new(0, 540, 0, 320)
MainFrame.Position = UDim2.new(0.5, -270, 0.5, -160)
MainFrame.BackgroundColor3 = Color3.fromRGB(21, 21, 21)
MainFrame.BorderSizePixel = 0
MainFrame.Parent = ScreenGui
Instance.new("UICorner", MainFrame).CornerRadius = UDim.new(0, 20)

local title = Instance.new("TextLabel", MainFrame)
title.Size = UDim2.new(1, 0, 0, 44)
title.Position = UDim2.new(0, 0, 0, 0)
title.BackgroundTransparency = 1
title.Text = "Universal Scripts"
title.TextColor3 = Color3.fromRGB(70, 245, 90)
title.TextSize = 32
title.Font = Enum.Font.GothamBlack
title.TextStrokeTransparency = 0.7
title.TextYAlignment = Enum.TextYAlignment.Center
title.TextXAlignment = Enum.TextXAlignment.Center

local closeBtn = Instance.new("TextButton", MainFrame)
closeBtn.Size = UDim2.new(0, 38, 0, 38)
closeBtn.Position = UDim2.new(1, -48, 0, 6)
closeBtn.BackgroundColor3 = Color3.fromRGB(16,32,16)
closeBtn.BorderSizePixel = 0
closeBtn.Text = ""
closeBtn.AutoButtonColor = true
Instance.new("UICorner", closeBtn).CornerRadius = UDim.new(1,0)
for _,r in ipairs({45,-45}) do
    local xLine = Instance.new("Frame", closeBtn)
    xLine.AnchorPoint = Vector2.new(0.5,0.5)
    xLine.Position = UDim2.new(0.5,0,0.5,0)
    xLine.Size = UDim2.new(0, 26, 0, 5)
    xLine.BackgroundColor3 = Color3.fromRGB(70,255,90)
    xLine.BorderSizePixel = 0
    xLine.Rotation = r
    xLine.ZIndex = 3
    Instance.new("UICorner", xLine).CornerRadius = UDim.new(0.5,0)
end

local closeFullBtn = Instance.new("TextButton", MainFrame)
closeFullBtn.Size = UDim2.new(0, 140, 0, 36)
closeFullBtn.Position = UDim2.new(1, -150, 1, -46)
closeFullBtn.BackgroundColor3 = Color3.fromRGB(200,40,40)
closeFullBtn.Text = "Fechar Script"
closeFullBtn.TextColor3 = Color3.fromRGB(255,255,255)
closeFullBtn.Font = Enum.Font.GothamBold
closeFullBtn.TextSize = 17
closeFullBtn.BorderSizePixel = 0
Instance.new("UICorner", closeFullBtn).CornerRadius = UDim.new(0,8)
closeFullBtn.MouseButton1Click:Connect(function()
    ScreenGui:Destroy()
end)

closeBtn.MouseButton1Click:Connect(function()
    MainFrame.Visible = false
    if not ScreenGui:FindFirstChild("OpenBtn") then
        local OpenBtn = Instance.new("TextButton")
        OpenBtn.Name = "OpenBtn"
        OpenBtn.Size = UDim2.new(0, 38, 0, 38)
        OpenBtn.Position = UDim2.new(1, -48, 0, 6)
        OpenBtn.BackgroundColor3 = Color3.fromRGB(0,0,0)
        OpenBtn.Text = ""
        OpenBtn.Parent = ScreenGui
        Instance.new("UICorner", OpenBtn).CornerRadius = UDim.new(1,0)
        OpenBtn.MouseButton1Click:Connect(function()
            MainFrame.Visible = true
            OpenBtn:Destroy()
        end)
    end
end)

------------------ ABA ESTRUTURA ------------------

local Tabs, TabButtons, currentTab = {}, {}, 1
local tabNames = {"Hub 1", "Hub 2", "Hub 3", "Hub 4"}
for i, name in ipairs(tabNames) do
    local btn = Instance.new("TextButton")
    btn.Size = UDim2.new(0, 90, 0, 36)
    btn.Position = UDim2.new(0, 18 + (i-1)*122, 0, 52)
    btn.BackgroundColor3 = i==1 and Color3.fromRGB(60,180,90) or Color3.fromRGB(40,40,44)
    btn.Text = name
    btn.TextColor3 = Color3.fromRGB(255,255,255)
    btn.TextSize = 18
    btn.Font = Enum.Font.GothamBold
    btn.BorderSizePixel = 0
    Instance.new("UICorner", btn).CornerRadius = UDim.new(0, 9)
    btn.Parent = MainFrame
    TabButtons[i] = btn

    local tab = Instance.new("Frame")
    tab.Size = UDim2.new(1,-36,1,-110)
    tab.Position = UDim2.new(0,18,0,88)
    tab.BackgroundTransparency = 1
    tab.Visible = (i==1)
    tab.Parent = MainFrame
    Tabs[i] = tab

    btn.MouseButton1Click:Connect(function()
        for j=1,4 do
            Tabs[j].Visible = (j==i)
            TabButtons[j].BackgroundColor3 = Color3.fromRGB(40,40,44)
        end
        btn.BackgroundColor3 = Color3.fromRGB(60, 180, 90)
        currentTab = i
    end)
end

------------------ SLIDER FUNCIONAL ------------------
local function makeSlider(parent, y, min, max, default, callback, label)
    local frame = Instance.new("Frame", parent)
    frame.Position = UDim2.new(0, 0, 0, y)
    frame.Size = UDim2.new(0, 220, 0, 38)
    frame.BackgroundColor3 = Color3.fromRGB(38,46,54)
    frame.BorderSizePixel = 0
    Instance.new("UICorner", frame).CornerRadius = UDim.new(0,11)

    local labelText = Instance.new("TextLabel", frame)
    labelText.Size = UDim2.new(0, 80, 1, 0)
    labelText.Position = UDim2.new(0, 10, 0, 0)
    labelText.BackgroundTransparency = 1
    labelText.Text = label
    labelText.TextColor3 = Color3.fromRGB(180,255,180)
    labelText.Font = Enum.Font.GothamBold
    labelText.TextXAlignment = Enum.TextXAlignment.Left
    labelText.TextSize = 15

    local sliderBar = Instance.new("Frame", frame)
    sliderBar.Position = UDim2.new(0, 90, 0.5, -6)
    sliderBar.Size = UDim2.new(0, 74, 0, 12)
    sliderBar.BackgroundColor3 = Color3.fromRGB(60, 180, 90)
    sliderBar.BorderSizePixel = 0
    Instance.new("UICorner", sliderBar).CornerRadius = UDim.new(1,0)

    local sliderKnob = Instance.new("ImageButton", frame)
    sliderKnob.Size = UDim2.new(0, 22, 0, 22)
    sliderKnob.BackgroundColor3 = Color3.fromRGB(255,255,255)
    sliderKnob.BorderSizePixel = 0
    sliderKnob.Position = UDim2.new(0, 90 + ((default-min)/(max-min))*74 - 11, 0.5, -11)
    sliderKnob.Image = ""
    Instance.new("UICorner", sliderKnob).CornerRadius = UDim.new(1,0)

    local valueLabel = Instance.new("TextLabel", frame)
    valueLabel.Size = UDim2.new(0, 34, 1, 0)
    valueLabel.Position = UDim2.new(1, -36, 0, 0)
    valueLabel.BackgroundTransparency = 1
    valueLabel.TextColor3 = Color3.fromRGB(255,255,255)
    valueLabel.Text = tostring(default)
    valueLabel.Font = Enum.Font.GothamBold
    valueLabel.TextSize = 13

    local val = default
    local dragging = false

    local function setSlider(x)
        local rel = math.clamp((x - sliderBar.AbsolutePosition.X)/sliderBar.AbsoluteSize.X, 0, 1)
        val = math.floor(min + (max-min)*rel)
        sliderKnob.Position = UDim2.new(0, 90 + (rel)*74 - 11, 0.5, -11)
        valueLabel.Text = tostring(val)
        callback(val)
    end

    sliderKnob.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            dragging = true
        end
    end)
    UIS.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            dragging = false
        end
    end)
    UIS.InputChanged:Connect(function(input)
        if dragging and (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then
            setSlider(input.Position.X)
        end
    end)
    sliderBar.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            setSlider(input.Position.X)
        end
    end)
    callback(default)
end

------------------ TOGGLE FUNCIONAL ------------------
local function createToggle(parent, text, callback, yCustom)
    local y = yCustom or (10 + (#parent:GetChildren()-1)*48)
    local Toggle = Instance.new("TextButton")
    Toggle.Size = UDim2.new(0, 200, 0, 36)
    Toggle.Position = UDim2.new(0, 0, 0, y)
    Toggle.BackgroundColor3 = Color3.fromRGB(200,40,40)
    Toggle.Text = text.." [OFF]"
    Toggle.TextColor3 = Color3.fromRGB(255,255,255)
    Toggle.TextSize = 17
    Toggle.Font = Enum.Font.GothamBold
    Toggle.BorderSizePixel = 0
    Instance.new("UICorner", Toggle).CornerRadius = UDim.new(0, 9)
    Toggle.Parent = parent
    local on = false
    local disconnectFunc = nil
    Toggle.MouseButton1Click:Connect(function()
        on = not on
        Toggle.Text = text..(on and " [ON]" or " [OFF]")
        Toggle.BackgroundColor3 = on and Color3.fromRGB(60,180,90) or Color3.fromRGB(200,40,40)
        Toggle.TextColor3 = Color3.fromRGB(255,255,255)
        if on then
            disconnectFunc = callback(true)
            table.insert(disconnects, disconnectFunc or function() end)
        else
            if disconnectFunc then pcall(disconnectFunc) end
            disconnectFunc = nil
        end
    end)
    return Toggle
end

------------------ HUB 1 (RESTAURADO) ------------------
do
    makeSlider(Tabs[1], 8, 5, 150, 16, function(val)
        currentWalkSpeed = val
        local h = LocalPlayer.Character and LocalPlayer.Character:FindFirstChildWhichIsA("Humanoid")
        if h then h.WalkSpeed = val end
    end, "WalkSpeed")
    makeSlider(Tabs[1], 56, 20, 200, 50, function(val)
        currentJumpPower = val
        local h = LocalPlayer.Character and LocalPlayer.Character:FindFirstChildWhichIsA("Humanoid")
        if h then
            h.JumpPower = val
            h.UseJumpPower = true
        end
    end, "JumpPower")

    local flyConn, flyGyro, flyBody
    createToggle(Tabs[1], "Fly (!Em teste!)", function(on)
        local char = LocalPlayer.Character
        local hum = char and char:FindFirstChildWhichIsA("Humanoid")
        local root = char and char:FindFirstChild("HumanoidRootPart")
        if not hum or not root then return end
        if on then
            hum.PlatformStand = true
            flyGyro = Instance.new("BodyGyro")
            flyGyro.MaxTorque = Vector3.new(9e9,9e9,9e9)
            flyGyro.P = 9e4
            flyGyro.CFrame = root.CFrame
            flyGyro.Parent = root

            flyBody = Instance.new("BodyVelocity")
            flyBody.MaxForce = Vector3.new(9e9,9e9,9e9)
            flyBody.Velocity = Vector3.zero
            flyBody.Parent = root

            flyConn = RunService.RenderStepped:Connect(function()
                if not hum or hum.Health <= 0 or not root or not root.Parent then return end
                local moveDir = Vector3.new()
                if UIS:IsKeyDown(Enum.KeyCode.W) then moveDir = moveDir + workspace.CurrentCamera.CFrame.LookVector end
                if UIS:IsKeyDown(Enum.KeyCode.S) then moveDir = moveDir - workspace.CurrentCamera.CFrame.LookVector end
                if UIS:IsKeyDown(Enum.KeyCode.A) then moveDir = moveDir - workspace.CurrentCamera.CFrame.RightVector end
                if UIS:IsKeyDown(Enum.KeyCode.D) then moveDir = moveDir + workspace.CurrentCamera.CFrame.RightVector end
                if UIS:IsKeyDown(Enum.KeyCode.Space) then moveDir = moveDir + Vector3.new(0,1,0) end
                if UIS:IsKeyDown(Enum.KeyCode.LeftControl) then moveDir = moveDir - Vector3.new(0,1,0) end

                if moveDir.Magnitude > 0 then
                    moveDir = moveDir.Unit * 50
                end
                flyGyro.CFrame = workspace.CurrentCamera.CFrame
                flyBody.Velocity = moveDir
            end)
            return function()
                if flyConn then flyConn:Disconnect() end
                if flyGyro then flyGyro:Destroy() end
                if flyBody then flyBody:Destroy() end
                if hum then hum.PlatformStand = false end
            end
        else
            if flyConn then flyConn:Disconnect() end
            if flyGyro then flyGyro:Destroy() end
            if flyBody then flyBody:Destroy() end
            if hum then hum.PlatformStand = false end
        end
    end, 104)

    local infJumpConn = nil
    createToggle(Tabs[1], "Infinite Jump", function(on)
        if on then
            infJumpConn = UIS.JumpRequest:Connect(function()
                local h = LocalPlayer.Character and LocalPlayer.Character:FindFirstChildWhichIsA("Humanoid")
                if h then h:ChangeState(Enum.HumanoidStateType.Jumping) end
            end)
            return function()
                if infJumpConn then infJumpConn:Disconnect() end
            end
        else
            if infJumpConn then infJumpConn:Disconnect() end
        end
    end, 152)
end

------------------ HUB 2 (FUNÇÕES RESTAURADAS) ------------------
do
    local plFrame = Instance.new("Frame", Tabs[2])
    plFrame.Position = UDim2.new(0, 0, 0, 0)
    plFrame.Size = UDim2.new(0, 180, 0, 145)
    plFrame.BackgroundColor3 = Color3.fromRGB(40,40,44)
    plFrame.BorderSizePixel = 0
    Instance.new("UICorner", plFrame).CornerRadius = UDim.new(0,10)
    plFrame.ZIndex = 2

    local plList = Instance.new("ScrollingFrame", plFrame)
    plList.Size = UDim2.new(1, 0, 1, -32)
    plList.Position = UDim2.new(0,0,0,0)
    plList.BackgroundTransparency = 1
    plList.BorderSizePixel = 0
    plList.ScrollBarThickness = 7
    plList.CanvasSize = UDim2.new(0,0,0,0)
    plList.ZIndex = 2

    local selectedPlayer = nil
    local function refreshPlayers()
        for _,c in ipairs(plList:GetChildren()) do
            if c:IsA("TextButton") then c:Destroy() end
        end
        local n = 0
        for _,p in ipairs(Players:GetPlayers()) do
            if p ~= LocalPlayer then
                local btn = Instance.new("TextButton", plList)
                btn.Size = UDim2.new(1, -8, 0, 28)
                btn.Position = UDim2.new(0, 4, 0, 4 + n*32)
                btn.BackgroundColor3 = Color3.fromRGB(255,255,255)
                btn.TextColor3 = Color3.fromRGB(0,0,0)
                btn.Text = p.Name
                btn.Font = Enum.Font.GothamBold
                btn.TextSize = 15
                btn.BorderSizePixel = 0
                Instance.new("UICorner", btn).CornerRadius = UDim.new(0,7)
                btn.MouseButton1Click:Connect(function()
                    selectedPlayer = p
                    for _,b in ipairs(plList:GetChildren()) do
                        if b:IsA("TextButton") then
                            b.BackgroundColor3 = Color3.fromRGB(255,255,255)
                            b.TextColor3 = Color3.fromRGB(0,0,0)
                        end
                    end
                    btn.BackgroundColor3 = Color3.fromRGB(60,180,90)
                    btn.TextColor3 = Color3.fromRGB(255,255,255)
                end)
                n = n+1
            end
        end
        plList.CanvasSize = UDim2.new(0,0,0,math.max(0,4 + n*32))
    end
    refreshPlayers()

    local refreshBtn = Instance.new("TextButton", plFrame)
    refreshBtn.Size = UDim2.new(1, 0, 0, 28)
    refreshBtn.Position = UDim2.new(0,0,1,-28)
    refreshBtn.BackgroundColor3 = Color3.fromRGB(200,40,40)
    refreshBtn.TextColor3 = Color3.fromRGB(255,255,255)
    refreshBtn.Text = "Refresh"
    refreshBtn.Font = Enum.Font.GothamBold
    refreshBtn.TextSize = 13
    refreshBtn.BorderSizePixel = 0
    Instance.new("UICorner", refreshBtn).CornerRadius = UDim.new(0,7)
    refreshBtn.MouseButton1Click:Connect(refreshPlayers)

    -- Funções à direita
    local function createRightBtn(txt, color, y, parent, activeColor, resetAfter)
        local btn = Instance.new("TextButton", parent)
        btn.Size = UDim2.new(0, 180, 0, 40)
        btn.Position = UDim2.new(0, 210, 0, y)
        btn.BackgroundColor3 = color
        btn.Text = txt
        btn.TextColor3 = Color3.fromRGB(255,255,255)
        btn.TextSize = 16
        btn.Font = Enum.Font.GothamBold
        btn.BorderSizePixel = 0
        Instance.new("UICorner", btn).CornerRadius = UDim.new(0,9)
        btn.ZIndex = 10
        if resetAfter then
            btn.MouseButton1Click:Connect(function()
                btn.BackgroundColor3 = activeColor
                spawn(function()
                    wait(2)
                    btn.BackgroundColor3 = color
                end)
            end)
        end
        return btn
    end

    local viewBtn = createRightBtn("View Player [OFF]", Color3.fromRGB(200,40,40), 6, Tabs[2], Color3.fromRGB(60,180,90))
    local stopViewBtn = createRightBtn("Stop View Player", Color3.fromRGB(200,40,40), 54, Tabs[2], Color3.fromRGB(200,40,40), true)
    local viewing = false
    local stopViewFunc = nil
    viewBtn.MouseButton1Click:Connect(function()
        viewing = not viewing
        viewBtn.Text = "View Player ["..(viewing and "ON" or "OFF").."]"
        viewBtn.BackgroundColor3 = viewing and Color3.fromRGB(60,180,90) or Color3.fromRGB(200,40,40)
        if viewing then
            if selectedPlayer and selectedPlayer.Character then
                workspace.CurrentCamera.CameraSubject = (selectedPlayer.Character:FindFirstChildWhichIsA("Humanoid") or selectedPlayer.Character)
                stopViewFunc = function()
                    viewing = false
                    viewBtn.Text = "View Player [OFF]"
                    viewBtn.BackgroundColor3 = Color3.fromRGB(200,40,40)
                    local h = LocalPlayer.Character and LocalPlayer.Character:FindFirstChildWhichIsA("Humanoid")
                    if h then
                        workspace.CurrentCamera.CameraSubject = h
                    elseif LocalPlayer.Character then
                        workspace.CurrentCamera.CameraSubject = LocalPlayer.Character
                    end
                end
                table.insert(disconnects, stopViewFunc)
            end
        else
            if stopViewFunc then stopViewFunc() end
        end
    end)
    stopViewBtn.MouseButton1Click:Connect(function()
        viewing = false
        viewBtn.Text = "View Player [OFF]"
        viewBtn.BackgroundColor3 = Color3.fromRGB(200,40,40)
        local h = LocalPlayer.Character and LocalPlayer.Character:FindFirstChildWhichIsA("Humanoid")
        if h then
            workspace.CurrentCamera.CameraSubject = h
        elseif LocalPlayer.Character then
            workspace.CurrentCamera.CameraSubject = LocalPlayer.Character
        end
    end)

    local function createRightToggle(text, y, callback)
        local Toggle = Instance.new("TextButton")
        Toggle.Size = UDim2.new(0, 180, 0, 40)
        Toggle.Position = UDim2.new(0, 210, 0, y)
        Toggle.BackgroundColor3 = Color3.fromRGB(200,40,40)
        Toggle.Text = text.." [OFF]"
        Toggle.TextColor3 = Color3.fromRGB(255,255,255)
        Toggle.TextSize = 16
        Toggle.Font = Enum.Font.GothamBold
        Toggle.BorderSizePixel = 0
        Instance.new("UICorner", Toggle).CornerRadius = UDim.new(0, 9)
        Toggle.Parent = Tabs[2]
        local on = false
        local disconnectFunc = nil
        Toggle.MouseButton1Click:Connect(function()
            on = not on
            Toggle.Text = text..(on and " [ON]" or " [OFF]")
            Toggle.BackgroundColor3 = on and Color3.fromRGB(60,180,90) or Color3.fromRGB(200,40,40)
            Toggle.TextColor3 = Color3.fromRGB(255,255,255)
            if on then
                disconnectFunc = callback(true)
                table.insert(disconnects, disconnectFunc or function() end)
            else
                if disconnectFunc then pcall(disconnectFunc) end
                disconnectFunc = nil
            end
        end)
        return Toggle
    end

    local noclipConn = nil
    createRightToggle("No Clip", 104, function(on)
        if on then
            noclipConn = RunService.Stepped:Connect(function()
                if LocalPlayer.Character then
                    for _,v in pairs(LocalPlayer.Character:GetDescendants()) do
                        if v:IsA("BasePart") then v.CanCollide = false end
                    end
                end
            end)
            return function()
                if noclipConn then noclipConn:Disconnect() end
                if LocalPlayer.Character then
                    for _,v in pairs(LocalPlayer.Character:GetDescendants()) do
                        if v:IsA("BasePart") then v.CanCollide = true end
                    end
                end
            end
        else
            if noclipConn then noclipConn:Disconnect() end
            if LocalPlayer.Character then
                for _,v in pairs(LocalPlayer.Character:GetDescendants()) do
                    if v:IsA("BasePart") then v.CanCollide = true end
                end
            end
        end
    end)

    createRightToggle("X-Ray", 152, function(on)
        for _,v in ipairs(workspace:GetDescendants()) do
            if v:IsA("BasePart") and not v:IsDescendantOf(LocalPlayer.Character) then
                v.LocalTransparencyModifier = on and 0.7 or 0
            end
        end
        return function()
            for _,v in ipairs(workspace:GetDescendants()) do
                if v:IsA("BasePart") and not v:IsDescendantOf(LocalPlayer.Character) then
                    v.LocalTransparencyModifier = 0
                end
            end
        end
    end)
end


------------------ HUB 3 (SELEÇÃO TP PLAYER PRETO E BRANCO) ------------------
do
    local plFrame = Instance.new("Frame", Tabs[3])
    plFrame.Position = UDim2.new(0, 10, 0, 60)
    plFrame.Size = UDim2.new(0, 180, 0, 145)
    plFrame.BackgroundColor3 = Color3.fromRGB(40,40,44)
    plFrame.BorderSizePixel = 0
    Instance.new("UICorner", plFrame).CornerRadius = UDim.new(0, 10)
    plFrame.ZIndex = 2

    local plList = Instance.new("ScrollingFrame", plFrame)
    plList.Size = UDim2.new(1, 0, 1, -32)
    plList.Position = UDim2.new(0, 0, 0, 0)
    plList.BackgroundTransparency = 1
    plList.BorderSizePixel = 0
    plList.ScrollBarThickness = 7
    plList.CanvasSize = UDim2.new(0, 0, 0, 0)
    plList.ZIndex = 2

    local selectedPlayer = nil
    local function refreshPlayersHub3()
        for _, c in ipairs(plList:GetChildren()) do
            if c:IsA("TextButton") then c:Destroy() end
        end

        local n = 0
        for _, p in ipairs(Players:GetPlayers()) do
            if p ~= LocalPlayer then
                local btn = Instance.new("TextButton", plList)
                btn.Size = UDim2.new(1, -8, 0, 28)
                btn.Position = UDim2.new(0, 4, 0, 4 + n * 32)
                btn.BackgroundColor3 = Color3.fromRGB(255,255,255)
                btn.TextColor3 = Color3.fromRGB(0,0,0)
                btn.Text = p.Name
                btn.Font = Enum.Font.GothamBold
                btn.TextSize = 15
                btn.BorderSizePixel = 0
                Instance.new("UICorner", btn).CornerRadius = UDim.new(0, 7)

                btn.MouseButton1Click:Connect(function()
                    selectedPlayer = p
                    for _, b in ipairs(plList:GetChildren()) do
                        if b:IsA("TextButton") then
                            b.BackgroundColor3 = Color3.fromRGB(255,255,255)
                            b.TextColor3 = Color3.fromRGB(0,0,0)
                        end
                    end
                    btn.BackgroundColor3 = Color3.fromRGB(60,180,90)
                    btn.TextColor3 = Color3.fromRGB(255,255,255)
                end)

                n = n + 1
            end
        end

        plList.CanvasSize = UDim2.new(0, 0, 0, math.max(0, 4 + n * 32))
    end
    refreshPlayersHub3()

    local refreshBtnHub3 = Instance.new("TextButton", plFrame)
    refreshBtnHub3.Size = UDim2.new(1, 0, 0, 28)
    refreshBtnHub3.Position = UDim2.new(0, 0, 1, -28)
    refreshBtnHub3.BackgroundColor3 = Color3.fromRGB(200,40,40)
    refreshBtnHub3.TextColor3 = Color3.fromRGB(255,255,255)
    refreshBtnHub3.Text = "Refresh"
    refreshBtnHub3.Font = Enum.Font.GothamBold
    refreshBtnHub3.TextSize = 13
    refreshBtnHub3.BorderSizePixel = 0
    Instance.new("UICorner", refreshBtnHub3).CornerRadius = UDim.new(0, 7)
    refreshBtnHub3.MouseButton1Click:Connect(refreshPlayersHub3)

    local btnTP = Instance.new("TextButton", Tabs[3])
    btnTP.Size = UDim2.new(0, 200, 0, 38)
    btnTP.Position = UDim2.new(0, 10, 0, 10)
    btnTP.BackgroundColor3 = Color3.fromRGB(200,40,40)
    btnTP.TextColor3 = Color3.fromRGB(255,255,255)
    btnTP.Text = "Tp Player"
    btnTP.Font = Enum.Font.GothamBold
    btnTP.TextSize = 17
    btnTP.BorderSizePixel = 0
    Instance.new("UICorner", btnTP).CornerRadius = UDim.new(0, 8)
    btnTP.MouseButton1Click:Connect(function()
        btnTP.BackgroundColor3 = Color3.fromRGB(60,180,90)
        btnTP.TextColor3 = Color3.fromRGB(255,255,255)
        if selectedPlayer and selectedPlayer.Character and selectedPlayer.Character:FindFirstChild("HumanoidRootPart") then
            local myChar = LocalPlayer.Character
            local myRoot = myChar and myChar:FindFirstChild("HumanoidRootPart")
            if myRoot then
                myRoot.CFrame = selectedPlayer.Character.HumanoidRootPart.CFrame + Vector3.new(0, 3, 0)
            end
        else
            warn("Selecione um jogador válido para teleportar.")
        end
        spawn(function()
            wait(2)
            btnTP.BackgroundColor3 = Color3.fromRGB(200,40,40)
            btnTP.TextColor3 = Color3.fromRGB(255,255,255)
        end)
    end)

    local espActive = false
    local espButton = Instance.new("TextButton", Tabs[3])
    espButton.Size = UDim2.new(0, 100, 0, 38)
    espButton.Position = UDim2.new(0, 230, 0, 10)
    espButton.BackgroundColor3 = Color3.fromRGB(200,40,40)
    espButton.TextColor3 = Color3.fromRGB(255,255,255)
    espButton.Text = "ESP [OFF]"
    espButton.Font = Enum.Font.GothamBold
    espButton.TextSize = 17
    espButton.BorderSizePixel = 0
    Instance.new("UICorner", espButton).CornerRadius = UDim.new(0, 8)

    local function createESP(player)
        if player == game.Players.LocalPlayer then return end
        if not player.Character then return end
        if player.Character:FindFirstChild("PlayerESP") then return end

        local highlight = Instance.new("Highlight")
        highlight.Name = "PlayerESP"
        highlight.FillColor = Color3.fromRGB(60,180,90)
        highlight.OutlineColor = Color3.fromRGB(255,255,255)
        highlight.FillTransparency = 0.5
        highlight.OutlineTransparency = 0
        highlight.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
        highlight.Adornee = player.Character
        highlight.Parent = player.Character
    end

    local function removeESP(player)
        if player.Character and player.Character:FindFirstChild("PlayerESP") then
            player.Character.PlayerESP:Destroy()
        end
    end

    espButton.MouseButton1Click:Connect(function()
        espActive = not espActive
        espButton.BackgroundColor3 = espActive and Color3.fromRGB(60,180,90) or Color3.fromRGB(200,40,40)
        espButton.TextColor3 = Color3.fromRGB(255,255,255)
        espButton.Text = espActive and "ESP [ON]" or "ESP [OFF]"

        for _, player in pairs(game.Players:GetPlayers()) do
            if player ~= game.Players.LocalPlayer then
                if espActive then
                    createESP(player)
                else
                    removeESP(player)
                end
            end
        end

        if espActive then
            game.Players.PlayerAdded:Connect(function(player)
                player.CharacterAdded:Connect(function()
                    task.wait(1)
                    createESP(player)
                end)
            end)
        end
    end)

    -- LIGHT-ALL toggle (abaixo do ESP)
    local lightAllToggle = Instance.new("TextButton", Tabs[3])
    lightAllToggle.Size = UDim2.new(0, 100, 0, 38)
    lightAllToggle.Position = UDim2.new(0, 230, 0, 60)
    lightAllToggle.BackgroundColor3 = Color3.fromRGB(200,40,40)
    lightAllToggle.TextColor3 = Color3.fromRGB(255,255,255)
    lightAllToggle.Text = "LIGHT-ALL [OFF]"
    lightAllToggle.Font = Enum.Font.GothamBold
    lightAllToggle.TextSize = 17
    lightAllToggle.BorderSizePixel = 0
    Instance.new("UICorner", lightAllToggle).CornerRadius = UDim.new(0, 8)

    local defaultAmbient = Lighting.Ambient
    local defaultBrightness = Lighting.Brightness
    local defaultOutdoorAmbient = Lighting.OutdoorAmbient
    local defaultClockTime = Lighting.ClockTime
    local defaultFogEnd = Lighting.FogEnd

    lightAllToggle.MouseButton1Click:Connect(function()
        lightAllActive = not lightAllActive
        lightAllToggle.BackgroundColor3 = lightAllActive and Color3.fromRGB(60,180,90) or Color3.fromRGB(200,40,40)
        lightAllToggle.TextColor3 = Color3.fromRGB(255,255,255)
        lightAllToggle.Text = lightAllActive and "LIGHT-ALL [ON]" or "LIGHT-ALL [OFF]"
        if lightAllActive then
            Lighting.Ambient = Color3.new(0.85,0.85,0.85)
            Lighting.Brightness = 4.5
            Lighting.OutdoorAmbient = Color3.new(0.85,0.85,0.85)
            Lighting.ClockTime = 13
            Lighting.FogEnd = 99999
        else
            Lighting.Ambient = defaultAmbient
            Lighting.Brightness = defaultBrightness
            Lighting.OutdoorAmbient = defaultOutdoorAmbient
            Lighting.ClockTime = defaultClockTime
            Lighting.FogEnd = defaultFogEnd
        end
    end)
end

------------------ HUB 4 ------------------

local credit = Instance.new("TextLabel", Tabs[4])
credit.Size = UDim2.new(1,0,0,60)
credit.Position = UDim2.new(0,0,0,20)
credit.BackgroundTransparency = 1
credit.TextColor3 = Color3.fromRGB(255,255,255)
credit.Text = "Futuras updates.."
credit.Font = Enum.Font.Gotham
credit.TextSize = 18
credit.TextWrapped = true
credit.TextYAlignment = Enum.TextYAlignment.Top

------------------ AJUSTE CORRIGE JUMP POWER ------------------
local function alwaysSetJump()
    local h = LocalPlayer.Character and LocalPlayer.Character:FindFirstChildWhichIsA("Humanoid")
    if h then
        h.JumpPower = currentJumpPower
        h.UseJumpPower = true
    end
end
RunService.RenderStepped:Connect(alwaysSetJump)
LocalPlayer.CharacterAdded:Connect(function()
    wait(1)
    alwaysSetJump()
end)